{
   "_id": "_design/widget",
   "views": {
       "voting-objects": {
           "map": "function(doc) {\n    if (doc.doc_type !== \"Voting\") {\n        return;\n    }\n    emit([doc._id, doc.doc_type], {  _id: doc._id });\n\n    for (vote in doc.votes) {\n        var voters = doc.votes[vote];\n        for (var i=0; i<voters.length; i++) {\n            var v = voters[i];\n            emit([doc._id, \"MPProfile\", vote], { _id: v[0] });\n            emit([doc._id, \"Fraction\", vote], { _id: v[1] });\n        }\n    }\n}"
       }
   },
   "lists": {
       "voting-joined": "function(head, req) {\n    if (req.query.include_docs !== 'true') {\n        start({ code: 400,\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        });\n        return send(JSON.stringify({ error: 'include_docs=true is required.' }));\n    }\n\n    var mps = {};\n    var fractions = {};\n    var voting = null;\n    var filter = function(o, keys) {\n        return new ((function() {\n            return function () {\n                for (var i=0; i<keys.length; i++) {\n                    var k = keys[i];\n                    this[k] = o[k];\n                }\n            }\n        })());\n    };\n\n    var filter_mp = function(o) {\n        return filter(o, ['_id', 'fraction', 'first_name', 'last_name', 'image', 'slug', 'source', 'title']);\n    };\n    var filter_fraction = function(o) {\n        return filter(o, ['_id', 'abbreviation', 'image', 'slug', 'source', 'title']);\n    };\n    var row;\n    while (row = getRow()) {\n        var voteid = row.key[0];\n        var doctype = row.key[1];\n        var vote = row.key[2];\n        switch (doctype) {\n            case 'Voting':\n                voting = row.doc;\n                break;\n            case 'Fraction':\n                if (fractions[row.doc._id] == null) {\n                    fractions[row.doc._id] = filter_fraction(row.doc);\n                }\n                break;\n            case 'MPProfile':\n                if (mps[row.doc._id] == null) {\n                    mps[row.doc._id] = filter_mp(row.doc);\n                }\n                break;\n        }\n    }\n    if (voting == null) {\n        start({ code: 404, headers: {\n            'Content-Type': 'application/json'\n        }\n        });\n        return send(JSON.stringify({\n            error: 'Voting not found.'\n        }));\n    }\n    result = {\n        voting: {\n            _id: voting._id,\n            title: voting.title,\n            source: voting.source,\n            documents: voting.documents,\n            registered_for_voting: voting.registered_for_voting,\n            total_votes: voting.total_votes,\n            vote_aye: voting.vote_aye,\n            vote_no: voting.vote_no,\n            vote_abstain: voting.vote_abstain,\n            votes: voting.votes\n        },\n        mps: mps,\n        fractions: fractions\n    };\n    start({ headers: {\n        'Content-Type': 'application/json'\n    }\n    });\n    return send(JSON.stringify(result));\n}"
   }
}
