// =============================================================================
//
//    Mixins Stylesheet
//    _mixins.scss
//    
//    Contains variables and mixins; controlls and helps other stylesheets.
//
// =============================================================================

// VARIABLES
// ---------

// Links
$linkColor:         #0069d6;
$linkColorHover:    darken($linkColor, 10%);

// Grays
$black:             #000;
$grayDark:          lighten($black, 25%);
$gray:              lighten($black, 50%);
$grayLight:         lighten($black, 75%);
$grayLighter:       lighten($black, 90%);
$white:             #fff;

// Accent Colors
$blue:              #049CDB;
$blueDark:          #0064CD;
$green:             #46a546;
$red:               #9d261d;
$yellow:            #ffc40d;
$orange:            #f89406;
$pink:              #c3325f;
$purple:            #7a43b6;

// Baseline grid
$basefont:          13px;
$baseline:          18px;

// Griditude
$gridColumns:       16;
$gridColumnWidth:   40px;
$gridGutterWidth:   20px;
$extraSpace:        ($gridGutterWidth * 2);
$siteWidth:         ($gridColumns * $gridColumnWidth) + ($gridGutterWidth * ($gridColumns - 1));

// Color Scheme
$baseColor:         $blue;
$complement:        adjust-hue($baseColor, 180deg);
$split1:            adjust-hue($baseColor, 158deg);
$split2:            adjust-hue($baseColor, -158deg);
$triad1:            adjust-hue($baseColor, 135deg);
$triad2:            adjust-hue($baseColor, -135deg);
$tetra1:            adjust-hue($baseColor, 90deg);
$tetra2:            adjust-hue($baseColor, -90deg);
$analog1:           adjust-hue($baseColor, 22deg);
$analog2:           adjust-hue($baseColor, -22deg);


// MIXINS
// ------

@mixin center-block
{
	display: block;
  margin: 0 auto;
}

@mixin clearfix
{
  zoom: 1;
  
	&:before,
	&:after
	{
    display: table;
    content: "";
	}
	
	&:after
	{
    clear: both;
	}
}

@mixin size ($height: 5px, $width: 5px)
{
  height: $height;
  width: $width;
}

@mixin square ($size: 5px)
{
  @include size($size, $size);
}

@mixin placeholder($color: $grayLight)
{
  :-moz-placeholder
  {
    color: $color;
  }
  ::-webkit-input-placeholder
  {
    color: $color;
  }
}

@mixin font-shorthand ($weight: normal, $size: 14px, $lineHeight: 20px)
{
  font-size: $size;
  font-weight: $weight;
  line-height: $lineHeight;
}
@mixin font-sans-serif ($weight: normal, $size: 14px, $lineHeight: 20px)
{
  font-family: "Helvetica Neue", Helvetica, Arial, sans-serif;
  font-size: $size;
  font-weight: $weight;
  line-height: $lineHeight;
}
@mixin font-serif ($weight: normal, $size: 14px, $lineHeight: 20px)
{
  font-family: "Georgia", Times New Roman, Times, serif;
  font-size: $size;
  font-weight: $weight;
  line-height: $lineHeight;
}
@mixin font-monospace ($weight: normal, $size: 12px, $lineHeight: 20px)
{
  font-family: "Monaco", Courier New, monospace;
  font-size: $size;
  font-weight: $weight;
  line-height: $lineHeight;
}

@mixin columns ($columnSpan: 1)
{
  width: ($gridColumnWidth * $columnSpan) + ($gridGutterWidth * ($columnSpan - 1));
}

@mixin offset ($columnOffset: 1)
{
  margin-left: ($gridColumnWidth * $columnOffset) + ($gridGutterWidth * ($columnOffset - 1)) + $extraSpace;
}

@mixin border-radius($radius: 5px)
{
  -webkit-border-radius: $radius;
  -moz-border-radius: $radius;
  border-radius: $radius;
}

@mixin box-shadow($shadow: 0 1px 3px rgba(0,0,0,.25))
{
  -webkit-box-shadow: $shadow;
  -moz-box-shadow: $shadow;
  box-shadow: $shadow;
}

@mixin transition($transition)
{
  -webkit-transition: $transition;
  -moz-transition: $transition;
  transition: $transition;
}

@mixin background-clip($clip) {
  -webkit-background-clip: $clip;
  -moz-background-clip: $clip;
  background-clip: $clip;
}

@mixin content-columns($columnCount, $columnGap: 20px)
{
  -webkit-column-count: $columnCount;
  -moz-column-count: $columnCount;
  column-count: $columnCount;
  
  -webkit-column-gap: $columnGap;
  -moz-column-gap: $columnGap;
  column-gap: $columnGap;
}

@mixin translucent-background($color: $white, $alpha: 1)
{
  background-color: hsla(hue($color), saturation($color), lightness($color), $alpha);
}

@mixin translucent-border($color: $white, $alpha: 1)
{
  border-color: hsla(hue($color), saturation($color), lightness($color), $alpha);
  background-clip: padding-box;
}

@mixin horizontal-gradient ($startColor: #555, $endColor: #333)
{
  background-color: $endColor;
  background-repeat: repeat-x;
  background-image: -khtml-gradient(linear, left top, right top, from($startColor), to($endColor));
  background-image: -moz-linear-gradient(left, $startColor, $endColor);
  background-image: -ms-linear-gradient(left, $startColor, $endColor);
  background-image: -webkit-gradient(linear, left top, right top, color-stop(0%, $startColor), color-stop(100%, $endColor));
  background-image: -webkit-linear-gradient(left, $startColor, $endColor);
  background-image: -o-linear-gradient(left, $startColor, $endColor);
  background-image: linear-gradient(left, $startColor, $endColor);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$startColor}', endColorstr='#{$endColor}', GradientType=0);
}

@mixin vertical-gradient ($startColor: #555, $endColor: #333)
{
  background-color: $endColor;
  background-repeat: repeat-x;
  background-image: -khtml-gradient(linear, left top, left bottom, from($startColor), to($endColor));
  background-image: -moz-linear-gradient(top, $startColor, $endColor);
  background-image: -ms-linear-gradient(top, $startColor, $endColor);
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, $startColor), color-stop(100%, $endColor));
  background-image: -webkit-linear-gradient(top, $startColor, $endColor);
  background-image: -o-linear-gradient(top, $startColor, $endColor);
  background-image: linear-gradient(top, $startColor, $endColor);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$startColor}', endColorstr='#{$endColor}', GradientType=0);
}

@mixin directional-gradient ($startColor: #555, $endColor: #333, $deg: 45deg)
{
  background-color: $endColor;
  background-repeat: repeat-x;
  background-image: -moz-linear-gradient($deg, $startColor, $endColor);
  background-image: -ms-linear-gradient($deg, $startColor, $endColor);
  background-image: -webkit-linear-gradient($deg, $startColor, $endColor);
  background-image: -o-linear-gradient($deg, $startColor, $endColor);
  background-image: linear-gradient($deg, $startColor, $endColor);
}

@mixin vertical-three-colors-gradient ($startColor: #00b3ee, $midColor: #7a43b6, $colorStop: 50%, $endColor: #c3325f)
{
  background-color: $endColor;
  background-repeat: no-repeat;
  background-image: -webkit-gradient(linear, 0 0, 0 100%, from($startColor), color-stop($colorStop, $midColor), to($endColor));
  background-image: -webkit-linear-gradient($startColor, $midColor $colorStop, $endColor);
  background-image: -moz-linear-gradient(top, $startColor, $midColor $colorStop, $endColor);
  background-image: -ms-linear-gradient($startColor, $midColor $colorStop, $endColor);
  background-image: -o-linear-gradient($startColor, $midColor $colorStop, $endColor);
  background-image: linear-gradient($startColor, $midColor $colorStop, $endColor);
  filter: progid:DXImageTransform.Microsoft.gradient(startColorstr='#{$startColor}', endColorstr='#{$endColor}', GradientType=0);
}

@mixin gradientBar ($primaryColor, $secondaryColor)
{
  @include vertical-gradient ($primaryColor, $secondaryColor);
  text-shadow: 0 -1px 0 rgba(0,0,0,.25);
  border-color: $secondaryColor $secondaryColor darken($secondaryColor, 15%);
  border-color: rgba(0,0,0,.1) rgba(0,0,0,.1) lighten(rgba(0,0,0,.1), 15%);
}

@mixin reset-gradient-filter
{
  filter: progid:DXImageTransform.Microsoft.gradient(enabled = false);
}

@mixin opacity ($opacity: 100)
{
  filter: alpha(opacity=#{$opacity});
  -khtml-opacity: $opacity / 100;
  -moz-opacity: $opacity / 100;
  opacity: $opacity / 100;
}